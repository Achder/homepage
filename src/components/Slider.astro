---
type Props = {
    id: string
    name: string
    min: number
    max: number
    value: number
    reset?: number
    step?: number
    class?: string
}

const { id, name, min, max, value, reset, step = 1, class: className, ...rest } = Astro.props
const { pathname } = Astro.url
---

<label class:list={['font-bold text-xl grid gap-2 text-dark', className]} {...rest}>
    {name}
    <input
        id={id}
        class="h-4 min-w-0"
        type="range"
        min={min}
        max={max}
        value={value}
        step={step}
        data-umami-event={`changed ${name} on ${pathname}`}
    />
</label>

<script define:vars={{ id, reset }}>
    const slider = document.getElementById(id)
    slider?.addEventListener('dblclick', () => {
        if (typeof reset === 'undefined') {
            return
        }

        slider.value = reset
        slider.dispatchEvent(new Event('input'))
    })
</script>

<style>
    input[type='range'] {
        -webkit-appearance: none;
        appearance: none;
        margin: 0;
        background-color: transparent;
    }

    input[type='range']::-webkit-slider-runnable-track {
        -webkit-appearance: none; /* Override default look */
        background-color: theme('colors.dark');
        border-radius: 100vmax;
        outline: 4px solid theme('colors.dark');
        outline-offset: -4px;
        height: 1.5rem;
    }

    input[type='range']::-moz-range-track {
        -webkit-appearance: none; /* Override default look */
        background-color: theme('colors.dark');
        border-radius: 100vmax;
        outline: 4px solid theme('colors.dark');
        outline-offset: -4px;
        height: 1.5rem;
    }

    input[type='range']:hover::-webkit-slider-runnable-track {
        background-color: theme('colors.brand');
    }

    input[type='range']:hover::-moz-range-track {
        background-color: theme('colors.brand');
    }

    input[type='range']::-webkit-slider-thumb {
        -webkit-appearance: none; /* Override default look */
        appearance: none;
        background-color: theme('colors.brand');
        height: 1.5rem;
        width: 1.5rem;
        border-radius: 100vmax;
        outline: 6px solid theme('colors.dark');
        outline-offset: -6px;
    }

    input[type='range']::-moz-range-thumb {
        -webkit-appearance: none; /* Override default look */
        appearance: none;
        background-color: theme('colors.brand');
        height: 1rem;
        width: 1rem;
        border-radius: 100vmax;
        outline: 6px solid theme('colors.dark');
        outline-offset: -6px;
    }

    input[type='range']:hover::-webkit-slider-thumb {
        background-color: theme('colors.dark');
        outline-color: theme('colors.brand');
    }

    input[type='range']:hover::-moz-range-thumb {
        background-color: theme('colors.dark');
        outline-color: theme('colors.brand');
    }
</style>
