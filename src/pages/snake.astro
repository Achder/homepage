---
import PageLayout from '../layouts/PageLayout.astro'
import Heading from '../components/Heading.astro'
import Slider from '../components/Slider.astro'
import Button from '../components/Button.astro'
---

<PageLayout
    description="Fun little snake implementation for kids entertainment during dinner"
>
    <Heading type="h1">Ssssnake</Heading>

    <div class="grid gap-4 justify-self-stretch">
        <Slider name="Speed" id="speed" min={0} max={500} value={400} />

        <div class="grid content-start gap-2">
            <span class="text-lg">Players</span>
            <div class="grid gap-4 grid-cols-2 sm:flex">
                <Button id="1-player">1 Player</Button>
                <Button id="2-player">2 Player</Button>
            </div>
        </div>
    </div>

    <div
        id="container"
        class="hidden min-h-dvh grid gap-4 grid-row-[auto_1fr_auto] items-center justify-self-stretch"
    >
        <div
            class="grid grid-cols-2 place-items-center sm:hidden rotate-180 select-none touch-manipulation"
        >
            <Button
                id="player-2-left"
                rounded
                class="rounded-full aspect-square">L</Button
            >
            <Button
                id="player-2-right"
                rounded
                class="rounded-full aspect-square">R</Button
            >
        </div>

        <canvas
            class="border-8 border-black w-[calc(min(100%,100dvh-64px))] mx-auto aspect-square shadow-2xl"
        ></canvas>

        <div
            class="grid grid-cols-2 place-items-center sm:hidden select-none touch-manipulation"
        >
            <Button
                id="player-1-left"
                rounded
                class="rounded-full aspect-square">L</Button
            >
            <Button
                id="player-1-right"
                rounded
                class="rounded-full aspect-square">R</Button
            >
        </div>
    </div>

    <div class="hidden sm:block">
        <p><span class="font-bold">Player 1:</span> Use ←↕→</p>
        <p><span class="font-bold">Player 2:</span> Use w-a-s-d</p>
    </div>
</PageLayout>

<style>
    .inputs {
        justify-self: stretch;
        display: grid;
        gap: 1rem;
    }

    .button-group > span {
        grid-column: 1 / -1;
        font-size: 1.5rem;
    }

    .button-group > button {
        margin: 0;
        padding: 0;
        border: 0;
        padding: 1rem 2rem;
        background: var(--light);
        color: var(--dark);
        font-weight: 800;
        font-size: 1rem;
        border: 4px solid var(--dark);
    }
</style>

<script>
    import { Game } from '../snake/game'

    let game: Game

    const field = {
        width: 30,
        height: 30,
    }

    // init speed
    const speed = document.getElementById('speed') as HTMLInputElement
    speed?.addEventListener('input', () =>
        game?.setSpeed(600 - speed.valueAsNumber)
    )

    // start new game
    const startGame = (numPlayers: 1 | 2) => {
        const canvas = document.querySelector('canvas')
        const container = document.getElementById('container')

        container?.classList.remove('hidden')
        container?.scrollIntoView({
            behavior: 'smooth',
        })

        game?.destructor()

        requestAnimationFrame(() => {
            const segmentSize = (canvas?.clientWidth ?? 0) / field.width
            if (canvas) {
                canvas.width = field.width * segmentSize
                canvas.height = field.height * segmentSize
            }
            game = new Game(field, segmentSize, numPlayers)
            speed?.dispatchEvent(new Event('input'))
            game.loop()
        })
    }

    document.addEventListener('DOMContentLoaded', () => {
        // init player selection
        const player1 = document.getElementById('1-player')
        const player2 = document.getElementById('2-player')

        player1?.addEventListener('click', () => {
            startGame(1)
        })

        player2?.addEventListener('click', () => {
            startGame(2)
        })

        // init player controls
        const player1Left = document.getElementById('player-1-left')
        const player1Right = document.getElementById('player-1-right')
        const player2Left = document.getElementById('player-2-left')
        const player2Right = document.getElementById('player-2-right')

        player1Left?.addEventListener('click', () => {
            window.dispatchEvent(
                new KeyboardEvent('keydown', { key: 'ArrowLeft' })
            )
        })
        player1Right?.addEventListener('click', () => {
            window.dispatchEvent(
                new KeyboardEvent('keydown', { key: 'ArrowRight' })
            )
        })
        player2Left?.addEventListener('click', () => {
            window.dispatchEvent(new KeyboardEvent('keydown', { key: 'a' }))
        })
        player2Right?.addEventListener('click', () => {
            window.dispatchEvent(new KeyboardEvent('keydown', { key: 'd' }))
        })
    })
</script>
